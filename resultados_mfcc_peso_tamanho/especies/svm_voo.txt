# Tuning hyper-parameters for accuracy

Best parameters set found on development set:

{'C': 1, 'decision_function_shape': 'ovo', 'kernel': 'linear'}

Grid scores on development set:

0.176 (+/-0.078) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.411 (+/-0.184) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.507 (+/-0.320) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.471 (+/-0.233) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.176 (+/-0.078) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.236 (+/-0.164) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.176 (+/-0.078) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.373 (+/-0.078) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.565 (+/-0.179) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.353 (+/-0.155) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.176 (+/-0.078) for {'C': 0.001, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.527 (+/-0.167) for {'C': 0.1, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.353 (+/-0.155) for {'C': 0.01, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.567 (+/-0.212) for {'C': 1, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.567 (+/-0.212) for {'C': 10, 'decision_function_shape': 'ovo', 'kernel': 'linear'}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Acur√°cia...: 61.5385
Precision..: 53.1235
Recall.....: 52.1154
F1-Score...: 50.5826

                                precision    recall  f1-score   support

            Augochloropsis_sp1       0.80      0.50      0.62         8
            Augochloropsis_sp2       0.00      0.00      0.00         0
                  Bombus_morio       0.83      1.00      0.91         5
             Bombus_pauloensis       0.67      0.80      0.73         5
               Centris_tarsata       0.00      0.00      0.00         1
           Centris_trigonoides       0.83      0.83      0.83         6
            Exomalopsis_analis       0.27      0.75      0.40         4
             Exomalopsis_minor       0.00      0.00      0.00         4
              Melipona_bicolor       1.00      0.62      0.77         8
       Melipona_quadrifasciata       0.50      0.67      0.57         3
Pseudoalglochloropsis_graminea       0.00      0.00      0.00         2
          Xylocopa_nigrocincta       1.00      0.60      0.75         5
             Xylocopa_suspecta       1.00      1.00      1.00         1

                      accuracy                           0.62        52
                     macro avg       0.53      0.52      0.51        52
                  weighted avg       0.68      0.62      0.62        52


# Tuning hyper-parameters for precision_macro

Best parameters set found on development set:

{'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}

Grid scores on development set:

0.021 (+/-0.010) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.273 (+/-0.155) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.366 (+/-0.336) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.293 (+/-0.118) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.021 (+/-0.010) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.132 (+/-0.141) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.021 (+/-0.010) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.189 (+/-0.049) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.443 (+/-0.270) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.183 (+/-0.066) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.021 (+/-0.010) for {'C': 0.001, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.379 (+/-0.183) for {'C': 0.1, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.183 (+/-0.066) for {'C': 0.01, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.429 (+/-0.231) for {'C': 1, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.429 (+/-0.231) for {'C': 10, 'decision_function_shape': 'ovo', 'kernel': 'linear'}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Acur√°cia...: 51.9231
Precision..: 52.1670
Recall.....: 53.0769
F1-Score...: 47.1959

                                precision    recall  f1-score   support

            Augochloropsis_sp1       0.00      0.00      0.00         8
            Augochloropsis_sp2       0.00      0.00      0.00         0
                  Bombus_morio       0.80      0.80      0.80         5
             Bombus_pauloensis       0.80      0.80      0.80         5
               Centris_tarsata       0.17      1.00      0.29         1
           Centris_trigonoides       1.00      0.33      0.50         6
            Exomalopsis_analis       0.16      0.75      0.26         4
             Exomalopsis_minor       0.00      0.00      0.00         4
              Melipona_bicolor       0.86      0.75      0.80         8
       Melipona_quadrifasciata       1.00      0.67      0.80         3
Pseudoalglochloropsis_graminea       0.00      0.00      0.00         2
          Xylocopa_nigrocincta       1.00      0.80      0.89         5
             Xylocopa_suspecta       1.00      1.00      1.00         1

                      accuracy                           0.52        52
                     macro avg       0.52      0.53      0.47        52
                  weighted avg       0.59      0.52      0.51        52


# Tuning hyper-parameters for recall_macro

Best parameters set found on development set:

{'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}

Grid scores on development set:

0.117 (+/-0.014) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.365 (+/-0.148) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.429 (+/-0.322) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.422 (+/-0.194) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.117 (+/-0.014) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.207 (+/-0.141) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.117 (+/-0.014) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.314 (+/-0.089) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.539 (+/-0.215) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.292 (+/-0.149) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.117 (+/-0.014) for {'C': 0.001, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.478 (+/-0.113) for {'C': 0.1, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.292 (+/-0.149) for {'C': 0.01, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.494 (+/-0.256) for {'C': 1, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.494 (+/-0.256) for {'C': 10, 'decision_function_shape': 'ovo', 'kernel': 'linear'}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Acur√°cia...: 51.9231
Precision..: 52.1670
Recall.....: 53.0769
F1-Score...: 47.1959

                                precision    recall  f1-score   support

            Augochloropsis_sp1       0.00      0.00      0.00         8
            Augochloropsis_sp2       0.00      0.00      0.00         0
                  Bombus_morio       0.80      0.80      0.80         5
             Bombus_pauloensis       0.80      0.80      0.80         5
               Centris_tarsata       0.17      1.00      0.29         1
           Centris_trigonoides       1.00      0.33      0.50         6
            Exomalopsis_analis       0.16      0.75      0.26         4
             Exomalopsis_minor       0.00      0.00      0.00         4
              Melipona_bicolor       0.86      0.75      0.80         8
       Melipona_quadrifasciata       1.00      0.67      0.80         3
Pseudoalglochloropsis_graminea       0.00      0.00      0.00         2
          Xylocopa_nigrocincta       1.00      0.80      0.89         5
             Xylocopa_suspecta       1.00      1.00      1.00         1

                      accuracy                           0.52        52
                     macro avg       0.52      0.53      0.47        52
                  weighted avg       0.59      0.52      0.51        52


# Tuning hyper-parameters for f1_macro

Best parameters set found on development set:

{'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}

Grid scores on development set:

0.035 (+/-0.015) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.289 (+/-0.141) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.375 (+/-0.316) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'rbf'}
0.324 (+/-0.170) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'rbf'}
0.035 (+/-0.015) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.130 (+/-0.148) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'poly'}
0.035 (+/-0.015) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 0.001, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 0.1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 0.01, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.216 (+/-0.040) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 1, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.465 (+/-0.240) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.01, 'kernel': 'sigmoid'}
0.208 (+/-0.067) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.001, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 10, 'decision_function_shape': 'ovo', 'gamma': 0.0001, 'kernel': 'sigmoid'}
0.035 (+/-0.015) for {'C': 0.001, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.402 (+/-0.146) for {'C': 0.1, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.208 (+/-0.067) for {'C': 0.01, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.436 (+/-0.227) for {'C': 1, 'decision_function_shape': 'ovo', 'kernel': 'linear'}
0.436 (+/-0.227) for {'C': 10, 'decision_function_shape': 'ovo', 'kernel': 'linear'}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Acur√°cia...: 51.9231
Precision..: 52.1670
Recall.....: 53.0769
F1-Score...: 47.1959

                                precision    recall  f1-score   support

            Augochloropsis_sp1       0.00      0.00      0.00         8
            Augochloropsis_sp2       0.00      0.00      0.00         0
                  Bombus_morio       0.80      0.80      0.80         5
             Bombus_pauloensis       0.80      0.80      0.80         5
               Centris_tarsata       0.17      1.00      0.29         1
           Centris_trigonoides       1.00      0.33      0.50         6
            Exomalopsis_analis       0.16      0.75      0.26         4
             Exomalopsis_minor       0.00      0.00      0.00         4
              Melipona_bicolor       0.86      0.75      0.80         8
       Melipona_quadrifasciata       1.00      0.67      0.80         3
Pseudoalglochloropsis_graminea       0.00      0.00      0.00         2
          Xylocopa_nigrocincta       1.00      0.80      0.89         5
             Xylocopa_suspecta       1.00      1.00      1.00         1

                      accuracy                           0.52        52
                     macro avg       0.52      0.53      0.47        52
                  weighted avg       0.59      0.52      0.51        52


